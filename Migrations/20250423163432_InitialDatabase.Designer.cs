// <auto-generated />
using BookingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250423163432_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingApp.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EventId");

                    b.ToTable("events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Date = "2025-03-13",
                            Duration = "30 MIN",
                            Time = "10:00 AM"
                        },
                        new
                        {
                            EventId = 2,
                            Date = "2025-03-13",
                            Duration = "45 MIN",
                            Time = "02:00 PM"
                        },
                        new
                        {
                            EventId = 3,
                            Date = "2025-03-14",
                            Duration = "1 HOUR",
                            Time = "06:00 PM"
                        });
                });

            modelBuilder.Entity("BookingApp.Models.EventUser", b =>
                {
                    b.Property<int>("EventUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventUserId"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EventUserId");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("eventUsers");

                    b.HasData(
                        new
                        {
                            EventUserId = 1,
                            EventId = 1,
                            Role = "Organizer",
                            UserId = 1
                        },
                        new
                        {
                            EventUserId = 2,
                            EventId = 1,
                            Role = "Attendee",
                            UserId = 2
                        },
                        new
                        {
                            EventUserId = 3,
                            EventId = 2,
                            Role = "Attendee",
                            UserId = 3
                        },
                        new
                        {
                            EventUserId = 4,
                            EventId = 3,
                            Role = "Attendee",
                            UserId = 1
                        },
                        new
                        {
                            EventUserId = 5,
                            EventId = 3,
                            Role = "Organizer",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BookingApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AvatarUrl = "https://example.com/avatars/johndoe.png",
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            Phone = "1234567890"
                        },
                        new
                        {
                            UserId = 2,
                            AvatarUrl = "https://example.com/avatars/janesmith.png",
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            Phone = "0987654321"
                        },
                        new
                        {
                            UserId = 3,
                            AvatarUrl = "https://example.com/avatars/alicejohnson.png",
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            Phone = "1122334455"
                        });
                });

            modelBuilder.Entity("BookingApp.Models.EventUser", b =>
                {
                    b.HasOne("BookingApp.Models.Event", "Event")
                        .WithMany("EventUsers")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingApp.Models.User", "User")
                        .WithMany("EventUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookingApp.Models.Event", b =>
                {
                    b.Navigation("EventUsers");
                });

            modelBuilder.Entity("BookingApp.Models.User", b =>
                {
                    b.Navigation("EventUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
